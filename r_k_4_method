# to solve ivp of 1st order by R-K-4 method

import numpy as np
import matplotlib.pyplot as plt
import sympy as sp
import pandas as pd

ode = input('enter the integrand function in x using python syntax:')

def F(x,y,ode):
    return eval(ode)
def f(x,y):
    return F(x,y,ode)

x = float(input('enter initial value of x: '))
y = float(input('enter initial value of y: '))
h = float(input('enter step size: '))
n = int(input('enter no of steps: '))

t = []
xval = []
yval = []

for i in range(n):
    k1 = h*f(x,y)
    k2 = h*f(x+h/2 , y+k1/2)
    k3 = h*f(x+h/2 , y+k2/2)
    k4 = h*f(x+h , y+k3)
    
    y = y +(1/6)*(k1+2*k2+2*k3+k4)
    x = x+h
    
    t.append([x,y])
    xval.append([x])
    yval.append([y])

t = pd.DataFrame(t,columns = ['x','y'])
print('Solutions:')
print(t)

plt.plot(xval,yval,label='R-K-4 solution',color = 'purple')
plt.axhline(0, color='blue')
plt.axvline(0, color='green')
plt.grid(True)
plt.xlabel('x')
plt.ylabel('f(x)')
plt.title('R-K-4 method')
plt.legend()
plt.show()
    
